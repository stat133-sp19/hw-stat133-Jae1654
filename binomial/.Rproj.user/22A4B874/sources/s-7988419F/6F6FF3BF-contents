---
title: "Hw10"
author: "Yunjae Cho"
date: "April 24, 2019"
output: html_document
---

```{r}
library(ggplot2)
library(tidyr)
library(dplyr)
```

#10A a)
```{r}
chick <- read.table(file = "chicks-1.txt",sep = " ", header = TRUE)
chick
el <- chick$el

cw <- chick$cw

#Tyche line is cw = B_0 + B_1el +e
#Reg line cw^hat = B_0^hat + B_1^hat * el 

el_mean <- mean(el)
el_mean
cw_mean <- mean(cw)
cw_mean

el_sd <- sd(el)
el_sd
cw_sd <- sd(cw)
cw_sd

r <- cor(el,cw)
#They are positiveley correlated.
r



y_int <- cw_mean -r*(cw_sd/el_sd)*el_mean
#Intercept
y_int

slp <- r*(cw_sd/el_sd)
#Slope
slp
#As egg length increases by 1mm, chick's weight will increase by 1g


#I can see that they are positively correlated

df <- data.frame(el,cw)

ggplot(data = df,aes(x = el,y = cw))+
  geom_point()+
  geom_abline(slope = slp,intercept = y_int)

```
#10A - b)

```{r}

reg <- lm(formula=cw~el)

summary(reg)

reg$coefficients

ggplot(data = df,aes(el,y = cw))+
  geom_point()+
  geom_smooth(method= lm,se = FALSE)





#The null hyp for both tests are whether the intercept and slopes are zero.  The T test statitic for intercept is -1.329 and its value is 0.191. Therefore, we fail to reject that the intercept is zero. About the slope, the T test has T.S of 5.947, and p value is very small, also for the F test has t.s of 35.37, and p-value is similar to T test. Thus, we both reject the null that slope is zero.
```

#10A - c)
```{r}
eb <- chick$eb
ew <- chick$ew

cor(chick)

#Egg weight has most highly correlated chick weight

reg <- lm(formula = cw~ew)
df2 <- data.frame(cw,ew)
ggplot(df2,aes(x = ew,y = cw))+
  geom_point()+
  geom_smooth(method = lm,se = FALSE)

qqnorm(reg$residuals); qqline(reg$residuals)

res <- reg$residuals

df3 <- data.frame(ew,res)

df3
ggplot(df3,aes(x = ew,y = res))+
  geom_point()


#There is some Heteroscadesticity, but normality is fine. 
```

#10A - d)
```{r}
reg <- lm(formula = cw~ew)
summary(reg)

def <- reg$df
res_sd <- 0.2207

n <- length(cw)

cw_hat <-reg$coefficients[1] + reg$coefficients[2]*8.5

cw_se <-res_sd*sqrt(1/n +(8.5-mean(ew))^2/((n-1)*var(ew)))

CI <- c(cw_hat + qt(0.025,df = def)*cw_se, cw_hat +qt(0.975,df=def)*cw_se)

CI
```

#10A -e)
```{r}

cw_pred <-reg$coefficients[1] + reg$coefficients[2]*8.5

cw_pred_se <-res_sd*sqrt(1+1/n + (8.5-mean(ew))^2/((n-1)*var(ew)))

PI <- c(cw_pred + qt(0.025,df = def)*cw_pred_se, cw_pred +qt(0.975,df=def)*cw_pred_se)

PI

```

#10A -f)
```{r}

cw_hat <-reg$coefficients[1] + reg$coefficients[2]*12


cw_se <-res_sd*sqrt(1/n + (12-mean(ew))^2/((n-1)*var(ew)))

CI <- c(cw_hat + qt(0.025,df = def)*cw_se, cw_hat +qt(0.975,df=def)*cw_se)

CI

cw_pred <-reg$coefficients[1] + reg$coefficients[2]*12

cw_pred_se <-res_sd*sqrt(1+1/n + (12-mean(ew))^2/((n-1)*var(ew)))

PI <- c(cw_pred + qt(0.025,df = def)*cw_pred_se, cw_pred +qt(0.975,df=def)*cw_pred_se)

PI
#It is extrapoleration. because out of the range. we are not sure about the intervals

```


#10B -a)
```{r}

reg <- lm(formula = cw ~eb+el)

summary(reg)
df <- data.frame(res = reg$residuals,fitted.values =reg$fitted.values)
ggplot(data =df, aes(x = fitted.values,y = res) )+
  geom_point()


qqnorm(reg$residuals); qqline(reg$residuals)

#The residual plot still has heterocity, and good normality.  R squared is not significantly greater than previous, in fact almost same. So, it is not noticeably better than previous. 
```
 
#10B b) Q
```{r}
reg <- lm(formula = ew ~ el+eb)

summary(reg)

df <- data.frame(ew = ew, fitted = reg$fitted.values)
ggplot(data = df, aes(x = fitted,y = ew) )+
  geom_point()+
  geom_smooth(method = lm, se = FALSE)
#The R squared is very high, so we can say that the egg's weight is almost linear combination of egg length and eggl breath.S`ince the cw is almost linear combination of eb and el, the regression of (cw~ ew) and (cw ~ el+eb) are almost same
```


#10B c) Q Interpretation
```{r}
reg <- lm(formula = cw ~ el+eb+ew)
summary(reg)

cor(chick)

#In theory, the R should be higher when el eb ; less correlated instead  ew eb highly correlated


#Now we accept the null for T-test and reject the null for F test. It is meaingless to add two more variable because basically ew is the linear combination of eb and el. Therefore, it is almost same that adding same variable. So, the R^2 is not significantly increase.
```




#10B -D
```{r}
cor(chick)
#There is no better than regressing cw ~ew because ew is almost linear combination other predictors
```


#10C
```{r}

tox <- read.table(file = "tox.txt",header = TRUE)

before <- tox$base

after <- tox$month15


#Since this data is paired, it's better to use paired t test for the parametric test and signed rank sum test for non-parametric test

#Parametric paired t test
dif <- before-after

n <- length(dif)

se <- sqrt(var(dif)/n)

ts <- mean(dif)/se

p_val <- 2*(1-pt(ts,df = n-1))
p_val
#Use function
t.test(before,after,paired = TRUE)

#Reject the null. The treatment is toxic


#Signed rank sum test, first manually, but result is different

df <- data.frame(before,after,dif)

df <- mutate(df,rank = rank(dif))

df <- mutate(df, signed_rank = rank*(dif/abs(dif)))

w_plus <- sum(df[df$signed_rank>0,"signed_rank"])

wilcox.test(before, after, paired = TRUE)

#Reject the null. so the treatment is toxic.
```

#10C - b Q
```{r}

cor(tox,tox)

chemo <- tox$chemo
base <- tox$base
month15 <- tox$month15
height <- tox$height


summary(lm(formula = month15~base))

summary(lm(formula = month15~ chemo + base))

#To estimate month15, it is better to choose predictors that are highly correlated with month15, but predictors are not highly correlated to each other, so it is reasonable to use the base and chemo. R^2 with base was 0.3 which is not significant, but by adding chemo, it was increased by 0.4846

# 0.4846

```




#10D 
```{r}

#a)
baby <- read.table(file = "baby.txt", header = TRUE)

baby %>% ggplot(aes(x = bw, y = ..density..)) + geom_histogram(bins = 17)

qqnorm(baby$bw);qqline(baby$bw)
#Normality looks fine. The histogram is bell shape and data matches well with the normal line.

bw <- baby$bw
gd <- baby$gd
ma <- baby$ma
mh <- baby$mh
mpw <- baby$mpw
sm <- baby$sm

#b)

baby %>% ggplot(aes(x = mpw,y = ..density..))+ geom_histogram(bins = 17)

qqnorm(baby$mpw);qqline(baby$mpw)
#the histrogram is very skewed to right. qqplot looks like 


#c)

cor(baby)
#From correlation table, we can sure that the mother's age doesn't affect much.

summary(lm(formula = bw~gd+mh+mpw+sm))
#Since all the t test of slopes are rejecting null which means that slopes are all significant. So it's better to include the all the variables except the ma

#d)

# -8.34833    0.95453  -8.746  < 2e-16 

#The coefficient of the indicator variable is about -8.35. Which can be used to estimate the baby's weight regards to mother's smoking status. Since the t test shows that the slope is not zero, it says that the mother's moking status affect to baby's weight. Since it has to outcomes which is 1 or 0, we can interpret that if mother was smoking during her pregnancy, the baby's weight drops by 8.348 oz
```





#10E
```{r}
women <- read.table(file = "women.txt", header = TRUE)

height <- women$h
ave <- women$avew

reg1 <- lm(formula = ave ~height)

qqnorm(reg1$residuals); qqline(reg1$residuals)

women %>% ggplot(aes(x = h, y = reg1$residuals))+geom_point()
#residuals looks normal but it has heterocity, we can redusce by adding polynomial function.
summary(reg1)

#R^2 is 0.991 which means that the data are almost linear.

R <- sqrt(0.991)
# b) loss generallity.we might have some outliers if the data is paired. So correlation will drop

# C) The residual plot looks like x^2 function, so add ploynomial with degree of 2.

height_sq <- height^2

reg2 <- lm(formula = ave ~ height + height_sq)

women %>% ggplot(aes(x = h, y = reg2$residuals))+geom_point()

#Still has heterocity. plot looks like x^3, so add ploynomial with degree of 3

height_cube <- (height)^3

reg3 <-  lm(formula = ave ~ height + height_sq +height_cube)

women %>% ggplot(aes(x = h, y = reg3$residuals))+geom_point()
#If we look at the range of the residual, the third plot looks significantly more concentrated to 0 compare to last two plots, and it can upheld the our assumption that error term is homoscedastic better previous one..

```

#10F
```{r}
bodytemp <- read.csv(file = "bodytemp.csv")


bodytemp$gender <- as.character(bodytemp$gender)


maletemp <- filter(bodytemp[bodytemp$gender ==1, ])
femaletemp <- filter(bodytemp[bodytemp$gender !=1, ])

#a)
#men plot
ggplot(maletemp,aes(x = rate, y= temperature, col = gender))+
  geom_point()
#female plot
ggplot(femaletemp,aes(x = rate, y= temperature, col = gender))+
  geom_point()


# for female plot, it doesn't seem to have relationship between rate and temperature, however, male seems to have little positive relationship


#b)
ggplot(bodytemp,aes(x = rate, y = temperature,group = gender))+
  geom_point(aes(shape = gender, color = gender))
#male seems has less spreaded around center than female

#c)
reg_male <- lm(formula = maletemp$rate ~maletemp$temperature)
summary(reg_male)
ggplot(maletemp, aes(x = temperature, y = reg_male$residuals))+
  geom_point()

#the residual plot have high heterocity

male_slp <- 1.645
male_slp_se <- 1.039


#d)
reg_female <- lm(formula = femaletemp$rate ~femaletemp$temperature)
summary(reg_female)
ggplot(femaletemp, aes(x = temperature, y = reg_female$residuals))+
  geom_point()

#female's the residual plot also have high heterocity

female_slp <- 3.128
female_slp_se <- 1.316


#E do the Z test since both data are indep, and large n and m
#null : the slp are same 
#alt : not the same

num1 <- male_slp - female_slp
se1 <- sqrt(female_slp_se^2 +male_slp_se^2)

pval1 <- 2*(pnorm(num1,mean = 0,sd = se1))

pval1
#since p val is 0.376,we accpet the null. Hence with 5% sig level, their slops are equal

#F same as above, but do with intercept


male_int <- -87.967
male_int_se <- 101.919

female_int <- -233.624
female_int_se <- 129.463

num2 <- male_int - female_int
se2 <- sqrt(male_int_se^2 + female_int_se^2)

pval2 <- 2*(1-pnorm(num2,mean = 0,sd =se2 ))
pval2

#since pval = 0.377, we accpet the null, the intercepts are the same
```
